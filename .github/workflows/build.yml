name: Compile Goo Engine

on:
  workflow_dispatch:
    inputs:
      operating_system:
        description: "OS: <Windows/Linux>"
        required: true
        default: Windows
        options: 
          - Windows
          - Linux
      branch:
        description: "Branch to checkout from dillongoostudios/goo-engine"
        required: false
  push:
    branches: [ "goo-engine-main" ]
  pull_request:
    branches: [ "goo-engine-main" ]

jobs:
  build-windows:
    runs-on: windows-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.operating_system == 'Windows' }}

    steps:
      - name: Checkout repository
        if: ${{ github.event_name != 'workflow_dispatch' || !github.event.inputs.branch }}
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: 'true'

      - name: Checkout dillongoostudios/goo-engine
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch }}
        uses: actions/checkout@v4
        with:
          repository: dillongoostudios/goo-engine
          ref: ${{ github.event.inputs.branch }}
          submodules: recursive
          lfs: 'true'

      - name: Install Subversion
        run: choco install svn -y

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Build project
        run: echo "y" | ./make  # Replace with your actual build command

      - name: Zip release
        run: 7z a -r windows-release.zip ../build_windows_x64_vc17_Release/bin/Release/*

      - name: Upload Windows release artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-release
          path: windows-release.zip

  build-linux:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.operating_system == 'Linux' }}

    steps:
      - name: Checkout repository
        if: ${{ github.event_name != 'workflow_dispatch' || !github.event.inputs.branch }}
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: 'true'

      - name: Checkout dillongoostudios/goo-engine
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch }}
        uses: actions/checkout@v4
        with:
          repository: dillongoostudios/goo-engine
          ref: ${{ github.event.inputs.branch }}
          submodules: recursive
          lfs: 'true'

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Setup dependencies
        run: |
          sudo apt update
          sudo apt install build-essential git git-lfs subversion cmake libx11-dev libxxf86vm-dev libxcursor-dev libxi-dev libxrandr-dev libxinerama-dev libegl-dev
          sudo apt install libwayland-dev wayland-protocols libxkbcommon-dev libdbus-1-dev linux-libc-dev
          ./build_files/utils/make_update.py --use-linux-libraries

      - name: Build project
        run: |
          echo "y" | make update
          echo "y" | make  # Replace with your actual build command

      - name: Tar release
        run: tar -czvf linux-release.tar.gz -C ../build_linux_x64/bin/* .

      - name: Upload Linux release artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-release
          path: linux-release.tar.gz

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    steps:
      - name: Download Windows release artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-release
          path: .

      - name: Download Linux release artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-release
          path: .

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.sha }}-${{ github.run_number }}
          name: v${{ github.sha }}-${{ github.run_number }}
          files: |
            windows-release.zip
            linux-release.tar.gz
          draft: true
